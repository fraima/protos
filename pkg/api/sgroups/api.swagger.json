{
  "swagger": "2.0",
  "info": {
    "title": "Host Based Firewall",
    "version": "1.0",
    "contact": {
      "name": "E",
      "url": "https://blog.bullgare.com/2020/07/complete-list-of-swagger-options-to-protobuf-file/"
    }
  },
  "tags": [
    {
      "name": "SecGroupService",
      "description": "Security Groups API service"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/list/networks": {
      "post": {
        "description": "ListNetworks: shows list of Network",
        "operationId": "SecGroupService_ListNetworks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sgroupsListNetworksResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sgroupsListNetworksReq"
            }
          }
        ],
        "tags": [
          "SecGroupService"
        ]
      }
    },
    "/v1/list/security-groups": {
      "post": {
        "description": "ListSecurityGroups: shows list of Security Groups",
        "operationId": "SecGroupService_ListSecurityGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sgroupsListSecurityGroupsResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sgroupsListSecurityGroupsReq"
            }
          }
        ],
        "tags": [
          "SecGroupService"
        ]
      }
    },
    "/v1/rules": {
      "post": {
        "description": "FindRules: finds SG(s) Rule(s) scoped by variety pairs 'from'-\u003e'to'",
        "operationId": "SecGroupService_FindRules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sgroupsRulesResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sgroupsFindRulesReq"
            }
          }
        ],
        "tags": [
          "SecGroupService"
        ]
      }
    },
    "/v1/sg-from/{sgFrom}/to/{sgTo}/rules": {
      "get": {
        "description": "GetRules: gets SG(s) Rule(s) for pair SG 'from'-\u003e'to'",
        "operationId": "SecGroupService_GetRules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sgroupsRulesResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sgFrom",
            "description": "name of security groups 'from'",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sgTo",
            "description": "name of security groups 'to'",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecGroupService"
        ]
      }
    },
    "/v1/sg/{sgName}/subnets": {
      "get": {
        "description": "GetSgSubnets: gets Networks related to SG",
        "operationId": "SecGroupService_GetSgSubnets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sgroupsGetSgSubnetsResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sgName",
            "description": "security group name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecGroupService"
        ]
      }
    },
    "/v1/sync": {
      "post": {
        "description": "Sync: makes changes in DB",
        "operationId": "SecGroupService_Sync",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sgroupsSyncReq"
            }
          }
        ],
        "tags": [
          "SecGroupService"
        ]
      }
    },
    "/v1/sync/status": {
      "get": {
        "description": "SyncStatus: gets last succeeded update DB status",
        "operationId": "SecGroupService_SyncStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sgroupsSyncStatusResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecGroupService"
        ]
      }
    },
    "/v1/{address}/sg": {
      "get": {
        "description": "GetSecGroupForAddress: gets Security Group by IP or CIDR",
        "operationId": "SecGroupService_GetSecGroupForAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sgroupsSecGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "description": "an IP or CIDR",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecGroupService"
        ]
      }
    }
  },
  "definitions": {
    "NetIPPortRange": {
      "type": "object",
      "properties": {
        "from": {
          "type": "integer",
          "format": "int64",
          "title": "port from"
        },
        "to": {
          "type": "integer",
          "format": "int64",
          "title": "port to"
        }
      },
      "title": "PortRange: port [from - to] range"
    },
    "NetIPTransport": {
      "type": "string",
      "enum": [
        "TCP",
        "UDP"
      ],
      "default": "TCP",
      "title": "Transport: represents net transport (L4)"
    },
    "NetworksNetIP": {
      "type": "object",
      "properties": {
        "CIDR": {
          "type": "string",
          "title": "CIDR: IP range"
        }
      },
      "title": "NetIP: represents IP-Network type (L3)"
    },
    "SyncReqSyncOp": {
      "type": "string",
      "enum": [
        "FullSync",
        "Upsert",
        "Delete"
      ],
      "default": "FullSync",
      "description": "- FullSync: FullSync: Delete+Insert+Update operations (default)\n - Upsert: Upsert: Insert+Update operations\n - Delete: Delete: Delete operation",
      "title": "SyncOp: sync operation"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "sgroupsFindRulesReq": {
      "type": "object",
      "properties": {
        "sgFrom": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "scope GS name 'from' items"
        },
        "sgTo": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "scope  GS name 'to' items"
        }
      },
      "title": "FindRulesReq: req to find all SecGroup(s) Rule(s) scoped by variety('from') --\u003e variety('to') SG(s)"
    },
    "sgroupsGetSgSubnetsResp": {
      "type": "object",
      "properties": {
        "networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sgroupsNetwork"
          },
          "title": "network items"
        }
      },
      "title": "GetSgSubnetsResp: Networks related to Security Group resp"
    },
    "sgroupsListNetworksReq": {
      "type": "object",
      "title": "ListNetworksReq: req to list Networks"
    },
    "sgroupsListNetworksResp": {
      "type": "object",
      "properties": {
        "networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sgroupsNetwork"
          },
          "title": "network items"
        }
      },
      "title": "ListNetworksResp: Network list resp"
    },
    "sgroupsListSecurityGroupsReq": {
      "type": "object",
      "title": "ListSecurityGroupsReq: req to list Seocurity Groups"
    },
    "sgroupsListSecurityGroupsResp": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sgroupsSecGroup"
          },
          "title": "security group items"
        }
      },
      "title": "ListSecurityGroupsResp: Security Groups list resp"
    },
    "sgroupsNetwork": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "the name of network"
        },
        "network": {
          "$ref": "#/definitions/NetworksNetIP",
          "title": "network in CIDR form"
        }
      },
      "title": "Network: represents a named IP network",
      "required": [
        "name"
      ]
    },
    "sgroupsRule": {
      "type": "object",
      "properties": {
        "sgFrom": {
          "$ref": "#/definitions/sgroupsSecGroup",
          "title": "security group at client"
        },
        "sgTo": {
          "$ref": "#/definitions/sgroupsSecGroup",
          "title": "security group at server"
        },
        "transport": {
          "$ref": "#/definitions/NetIPTransport",
          "title": "IP net transport"
        },
        "portsFrom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetIPPortRange"
          },
          "title": "port range(s) from"
        },
        "portsTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetIPPortRange"
          },
          "title": "port range(s) to"
        }
      },
      "title": "Rule: represents Security Wroups Rule",
      "required": [
        "sgFrom",
        "sgTo",
        "transport"
      ]
    },
    "sgroupsRulesResp": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sgroupsRule"
          },
          "title": "SG rule(s) items"
        }
      },
      "title": "RulesResp: Security Group(s) Rule(s) resp"
    },
    "sgroupsSecGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name of security group"
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sgroupsNetwork"
          },
          "title": "related to security gpoup network(s)"
        }
      },
      "title": "SecGroup: represents a security group",
      "required": [
        "name"
      ]
    },
    "sgroupsSyncNetworks": {
      "type": "object",
      "properties": {
        "networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sgroupsNetwork"
          },
          "title": "network items"
        }
      },
      "title": "SyncNetworks: subject of Networks to Sync"
    },
    "sgroupsSyncReq": {
      "type": "object",
      "properties": {
        "syncOp": {
          "$ref": "#/definitions/SyncReqSyncOp",
          "title": "sync operation to apply to"
        },
        "sgRules": {
          "$ref": "#/definitions/sgroupsSyncSGRules",
          "title": "subject of Security Grpup(s) Rule(s)"
        },
        "groups": {
          "$ref": "#/definitions/sgroupsSyncSecurityGroups",
          "title": "subject of Security Grpup(s)"
        },
        "networks": {
          "$ref": "#/definitions/sgroupsSyncNetworks",
          "title": "subject of Network(s)"
        }
      },
      "title": "SyncReq: request to apply changes in DB for one of subject [Networks|Sucurity Groups|Security Grpups Rules]"
    },
    "sgroupsSyncSGRules": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sgroupsRule"
          },
          "title": "security group rules items"
        }
      },
      "title": "SyncSGRules: subject of Security Group Rules to Sync"
    },
    "sgroupsSyncSecurityGroups": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sgroupsSecGroup"
          },
          "title": "security group items"
        }
      },
      "title": "SyncSecurityGroups: subject of Security Groups to Sync"
    },
    "sgroupsSyncStatusResp": {
      "type": "object",
      "properties": {
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "title": "last succeeded updated DB timestamp"
        }
      },
      "title": "SyncStatusResp: db status after last succeeded Sync"
    }
  }
}
