{
  "swagger": "2.0",
  "info": {
    "title": "Security groups API",
    "version": "1.0",
    "contact": {
      "name": "E",
      "url": "https://blog.bullgare.com/2020/07/complete-list-of-swagger-options-to-protobuf-file/"
    }
  },
  "tags": [
    {
      "name": "SecGroupService"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/rules": {
      "post": {
        "summary": "find security rules scoped by security groups",
        "operationId": "SecGroupService_FindRules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sgroupsRulesResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sgroupsFindRulesReq"
            }
          }
        ],
        "tags": [
          "SecGroupService"
        ]
      }
    },
    "/v1/sg-from/{sgFrom}/to/{sgTo}/rules": {
      "get": {
        "summary": "find security rules for direction SG --\u003e SG",
        "operationId": "SecGroupService_GetRules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sgroupsRulesResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sgFrom",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sgTo",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecGroupService"
        ]
      }
    },
    "/v1/sg/{sgName}/subnets": {
      "get": {
        "summary": "get subnet(s) for SG",
        "operationId": "SecGroupService_GetSgSubnets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sgroupsGetSgSubnetsResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sgName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecGroupService"
        ]
      }
    },
    "/v1/sync": {
      "post": {
        "summary": "synchronize security rules",
        "operationId": "SecGroupService_Sync",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sgroupsSyncReq"
            }
          }
        ],
        "tags": [
          "SecGroupService"
        ]
      }
    },
    "/v1/{address}/sg": {
      "get": {
        "summary": "get security group for address",
        "operationId": "SecGroupService_GetSecGroupForAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sgroupsSecGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "description": "an IP or IP/subnet address",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecGroupService"
        ]
      }
    }
  },
  "definitions": {
    "NetIPPortRange": {
      "type": "object",
      "properties": {
        "from": {
          "type": "integer",
          "format": "int64"
        },
        "to": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "IP net port range"
    },
    "NetIPTransport": {
      "type": "string",
      "enum": [
        "TCP",
        "UDP"
      ],
      "default": "TCP",
      "title": "IP net transport"
    },
    "NetworksNetIP": {
      "type": "object",
      "properties": {
        "CIDR": {
          "type": "string",
          "title": "IP net address range"
        }
      },
      "title": "IP network"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "sgroupsFindRulesReq": {
      "type": "object",
      "properties": {
        "sgFrom": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sgTo": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "sgroupsGetSgSubnetsResp": {
      "type": "object",
      "properties": {
        "networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sgroupsNetwork"
          }
        }
      }
    },
    "sgroupsNetwork": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "network": {
          "$ref": "#/definitions/NetworksNetIP"
        }
      },
      "title": "ip network"
    },
    "sgroupsRule": {
      "type": "object",
      "properties": {
        "sgFrom": {
          "$ref": "#/definitions/sgroupsSecGroup",
          "title": "security group at client"
        },
        "sgTo": {
          "$ref": "#/definitions/sgroupsSecGroup",
          "title": "security group at server"
        },
        "transport": {
          "$ref": "#/definitions/NetIPTransport",
          "title": "IP net transport"
        },
        "portRange": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetIPPortRange"
          },
          "title": "port range(s)"
        }
      },
      "title": "security group rule"
    },
    "sgroupsRulesResp": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sgroupsRule"
          }
        }
      }
    },
    "sgroupsSecGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sgroupsNetwork"
          }
        }
      },
      "title": "security group"
    },
    "sgroupsSyncReq": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sgroupsRule"
          }
        }
      }
    }
  }
}
